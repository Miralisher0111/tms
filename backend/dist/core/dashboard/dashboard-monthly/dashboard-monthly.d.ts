import { Base } from '../../base';
import { OracleService } from '../../../oracle/oracle.service';
export declare class DashboardMonthly extends Base {
    protected readonly firstDate: any;
    protected readonly secondDate: any;
    protected readonly dateOption?: any;
    constructor(firstDate: any, secondDate: any, oracleService: OracleService, dateOption?: any);
    protected formatQuery(whereQuery: string): string;
    protected chooseQuery: (onlyTwoQuery: string, allQuery: string, monthQuery: string) => string;
    private dashboardMonthlyQuery;
    private currentProfitQuery;
    private capitalQuery;
    private ROAQuery;
    private ROEQuery;
    private LDWeightedAvgRatesQuery;
    private PDWeightedAvgRatesQuery;
    private dashboardLiquidityQuery;
    protected createData(count: string, indicatorName: string, data?: any, isTableHead?: boolean, withPercent?: boolean): {
        count: string;
        indicatorName: string;
        data: any[];
        differ: number;
        differPercent: number;
        isTableHead: boolean;
        withPercent?: undefined;
    } | {
        count: string;
        indicatorName: string;
        data: any;
        differ: number;
        differPercent: number;
        isTableHead: boolean;
        withPercent: boolean;
    };
    private getOneRow;
    private all_actives;
    private authorized_capital;
    private own_capital;
    private current_profit;
    private regular_capital;
    private capital_first_degree;
    private capital_adequacy_ratio;
    private roa;
    private roe;
    private total_liabilities;
    private legals_deposits;
    private demand_legals_deposits;
    private saving_legals_deposits;
    private saving_legals_deposits_nat_curr;
    private sld_weighted_avg_rates_NC;
    private saving_legals_deposits_for_curr;
    private sld_weighted_avg_rates_FC;
    private time_legals_deposits;
    private time_legals_deposits_nat_curr;
    private tld_weighted_avg_rates_NC;
    private time_legals_deposits_for_curr;
    private tld_weighted_avg_rates_FC;
    private physicals_deposits;
    private demand_physicals_deposits;
    private saving_physicals_deposits;
    private saving_physicals_deposits_nat_curr;
    private spd_weighted_avg_rates_NC;
    private saving_physicals_deposits_for_curr;
    private spd_weighted_avg_rates_FC;
    private time_physicals_deposits;
    private time_physicals_deposits_nat_curr;
    private tpd_weighted_avg_rates_NC;
    private time_physicals_deposits_for_curr;
    private tpd_weighted_avg_rates_FC;
    private external_funding;
    private national_curr;
    private ef_weighted_avg_rates_NC;
    private foreign_curr;
    private ef_weighted_avg_rates_FC;
    private LCR_total;
    private LCR_nat_curr;
    private LCR_for_curr;
    private NSFR_total;
    private NSFR_nat_curr;
    private NSFR_for_curr;
    private VLA_total;
    private VLA_nat_curr;
    private VLA_for_curr;
    getRows(): Promise<({
        count: string;
        indicatorName: string;
        data: any[];
        differ: number;
        differPercent: number;
        isTableHead: boolean;
        withPercent?: undefined;
    } | {
        count: string;
        indicatorName: string;
        data: any;
        differ: number;
        differPercent: number;
        isTableHead: boolean;
        withPercent: boolean;
    })[][]>;
}
