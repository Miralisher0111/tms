import { Base } from '../../base';
import { ICapitalRow } from './capital.interface';
export declare class CapitalBase extends Base {
    protected formatQuery(whereQuery: string): string;
    private fullPaidSharesQuery;
    private reversePurchasedQuery;
    private pastPeriodsQuery;
    private currentYearQuery;
    private fullyPaidSharesQuery;
    private totalCapitalInvestmentQuery;
    private currentYearProfitQuery;
    private createData;
    private getTotal;
    private getOneRow;
    private ordinary_shares;
    private full_paid_shares;
    private reverse_repurchased;
    private capital_added;
    private capital_reserves;
    private undistributed_profits;
    private los_for_past_periods;
    private los_for_current_year;
    private retained_earnings;
    private subsidy_minor_interest;
    private devaluation_reserve;
    private capital_before_deduction;
    private deduction_from_tier1;
    private intangible_assets;
    private total_capital_investment;
    private investment_for_other_banks;
    private total_corrected_capital;
    private added_capital_level1;
    private non_cumulative_shares;
    private fully_paid_shares;
    private reverse_repurchased_assets;
    private added_capital_preferred;
    private interest_in_consolidated_subsidiary;
    private interest_of_subsidiaries;
    private capital_added_total_level1;
    private total_adjusted_capital_level1;
    private capital_level2;
    private current_year_profit;
    private provisions_for_loans;
    private surplus_over_cost;
    private other_capital_instruments;
    private subordinated_debt;
    private deductions_of_excess;
    private total_capital_level2;
    private corrected_capital_level2;
    private total_regular_capital;
    getRows(): Promise<ICapitalRow[]>;
}
